<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.richfaces.integrationTest</groupId>
	<artifactId>functional-test</artifactId>
	<version>3.3.4-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>selenium-test</name>
	<url>http://maven.apache.org</url>
	<repositories>
		<repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-qa-releases</id>
            <url>http://nexus.qa.jboss.com:8081/nexus/content/repositories/releases</url>
            <releases>
                <updatePolicy>never</updatePolicy>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-qa-snapshots-repository</id>
            <url>http://nexus.qa.jboss.com:8081/nexus/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <updatePolicy>daily</updatePolicy>
                <enabled>true</enabled>
            </snapshots>
        </repository>
	</repositories>
	<properties>
		<demo.artifactId.suffix />
		<!-- demo.version>${project.version}</demo.version-->
		<demo.version>3.3.1.SP3</demo.version>
		<demo.classifier></demo.classifier>
		<demo.location></demo.location>
		<resources.dir>${project.build.directory}/test-classes</resources.dir>
		<extensions.dir>${resources.dir}/user-extensions</extensions.dir>
		<browser></browser>
		<context.root>http://localhost:8080/</context.root>
		<context.path>/richfaces-demo</context.path>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<selenium.host>localhost</selenium.host>
		<selenium.port>8444</selenium.port>
		<selenium.debug>false</selenium.debug>
		<selenium.maximize>false</selenium.maximize>
		<demo.deployable>${demo.deployable.directory}/${demo.deployable.file}</demo.deployable>
		<demo.deployable.directory>${project.build.directory}</demo.deployable.directory>
		<demo.deployable.file>richfaces-demo.war</demo.deployable.file>
		<jsf.majorVersion>1</jsf.majorVersion>
		<version.selenium>2.31.0</version.selenium>
		<!-- arquillian versions -->
        <arquillian.bom.version>1.0.3.Final</arquillian.bom.version>
        <arquillian.tomcat.version>1.0.0.CR4</arquillian.tomcat.version>
        <arquillian.drone.version>1.1.0.Final</arquillian.drone.version>
        <arquillian.graphene-testng.version>2.0.0.Alpha3</arquillian.graphene-testng.version>
        <arquillian.graphene-webdriver.version>2.0.0.Beta1-SNAPSHOT</arquillian.graphene-webdriver.version>
        <arquillian.jboss-as6.version>1.0.0.CR3</arquillian.jboss-as6.version>
        <arquillian.glassfish3-1.version>1.0.0.CR3</arquillian.glassfish3-1.version>
        <arquillian.openshift-express>1.0.0.Beta1</arquillian.openshift-express>
        <arquillian.android.version>1.0.0.Alpha2</arquillian.android.version>
        <shrinkwrap.descriptors.version>2.0.0-alpha-4</shrinkwrap.descriptors.version>
        <version.jbossas7-1>7.1.1.Final</version.jbossas7-1>
	</properties>
	<build>
		<finalName>${project.artifactId}</finalName>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources/user-extensions</directory>
				<targetPath>user-extensions</targetPath>
				<includes>
					<include>**/*.js</include>
				</includes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<!--
						Skip the normal tests, we'll run them in the integration-test
						phase
					-->
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>surefire-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!--
		  **********************
		  ** Integration Test **
		  **********************
		  If -Dmaven.test.skip isn't specified,
		  unpacks user extensions from selenium-testing-lib,
		  concatenate both (selenium-testing-lib and own) extensions to one file,
		  starts selenium core server
		  and runs surefire test (testng selenium tests).
		 -->
		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>!maven.test.skip</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.12</version>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skip>false</skip>
									<suiteXmlFiles>
										<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
									</suiteXmlFiles>
									<argLine>-Dbrowser='${browser}' -Dcontext.root='${context.root}' -Dcontext.path='${context.path}' -Dselenium.host='${selenium.host}' -Dselenium.port='${selenium.port}' -Dselenium.debug='${selenium.debug}' -Dselenium.maximize='${selenium.maximize}' -Dmaven.resources.dir='${resources.dir}' -Dmaven.project.build.directory='${project.build.directory}' -Djsf.majorVersion='${jsf.majorVersion}'</argLine>
									<properties>
										<property>
											<name>listener</name>
											<value>org.jboss.richfaces.integrationTest.ConsoleStatusTestListener</value>
										</property>
									</properties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- profile>
			<id>local-selenium-session</id>
			<activation>
				<property>
					<name>!maven.test.skip</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-user-extensions</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeGroupIds>org.jboss.test</includeGroupIds>
									<includeArtifactIds>richfaces-selenium</includeArtifactIds>
									<includes>jbossqa-extensions.js</includes>
									<outputDirectory>${extensions.dir}</outputDirectory>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>concatenate-extensions</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<concat destfile="${resources.dir}/custom-extensions.js"
											fixlastline="yes"-->
											<!--  space-separated list of files -->
											<!-- filelist dir="${extensions.dir}"
												files="jquery.js jbossqa-extensions.js rfqa-extensions.js" />
										</concat>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>selenium-maven-plugin</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>start-selenium-server</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start-server</goal>
								</goals>
								<configuration>
									<background>true</background>
									<port>${selenium.port}</port>
									<userExtensions>${resources.dir}/custom-extensions.js</userExtensions>
									<firefoxProfileTemplate>${firefoxProfileTemplate}</firefoxProfileTemplate>
									<logOutput>true</logOutput>
									<logFile>${project.build.directory}/selenium/selenium-server.log</logFile>
									<browserSideLog>${selenium.debug}</browserSideLog>
									<debug>${selenium.debug}</debug>
								</configuration>
							</execution>
							<execution>
								<id>stop-selenium-server</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop-server</goal>
								</goals>
								<configuration>
									<background>true</background>
									<port>${selenium.port}</port>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile-->
		<profile>
			<id>jsf2_0</id>
			<activation>
				<property>
					<name>jsf2</name>
				</property>
			</activation>
			<properties>
				<demo.artifactId.suffix>-jsf2</demo.artifactId.suffix>
				<jsf.majorVersion>2</jsf.majorVersion>
				<jsf.version>2.0.2</jsf.version>
				<jsf.libs.target>${project.build.directory}/installs/jsf-libs</jsf.libs.target>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-jsf-libs</id>
								<goals>
									<goal>copy</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.sun.faces</groupId>
											<artifactId>jsf-api</artifactId>
											<version>${jsf.version}</version>
											<overWrite>true</overWrite>
											<outputDirectory>${jsf.libs.target}</outputDirectory>
											<destFileName>jsf-api.jar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>com.sun.faces</groupId>
											<artifactId>jsf-impl</artifactId>
											<version>${jsf.version}</version>
											<overWrite>true</overWrite>
											<outputDirectory>${jsf.libs.target}</outputDirectory>
											<destFileName>jsf-impl.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  Container Profile -->
		<!-- profile>
			<id>container</id>
			<activation>
				<property>
					<name>containerId</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.2.0</version>
						<executions>
							<execution>
								<id>install-container</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>									
									<goal>start</goal--><!-- order is important to 'pingURL' working correctly. 
                                                            Using 'pingURL' is necessary to avoid start run surefire before application is deployed.
                                                            Application deployment is not synchronized on JBoss AS 7.1.x -->
                                    <!-- goal>deploy</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<wait>false</wait>
							<container>
								<containerId>${containerId}</containerId>
								<append>false</append>
								<zipUrlInstaller>
									<url>${container.installer.url}</url>
									<extractDir>${project.basedir}/target/installs</extractDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<properties>
									<cargo.hostname>localhost</cargo.hostname>
									<cargo.jvmargs>-Xms256m -Xmx512m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000</cargo.jvmargs>
								</properties>
							</configuration>
							<deployer>
								<type>installed</type>
								<deployables>
									<deployable>
										<type>war</type>
										<location>${demo.deployable}</location>
										<properties>
											<context>${context.path}</context>
										</properties>
										<pingURL>${context.root}${context.path}/welcome.jsf</pingURL>
										<pingTimeout>60000</pingTimeout>
									</deployable>
								</deployables>
							</deployer>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile-->
		<profile>
			<id>container-demoapp-deployable-dependency</id>
			<activation>
				<file>
					<missing>${demo.location}</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-richfaces-demo-war-dependency</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.richfaces.samples</groupId>
											<artifactId>richfaces-demo${demo.artifactId.suffix}</artifactId>
											<version>${demo.version}</version>
											<classifier>${demo.classifier}</classifier>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${demo.deployable.directory}</outputDirectory>
											<destFileName>${demo.deployable.file}</destFileName>
										</artifactItem>
									</artifactItems>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>delete-richfaces-demo-war</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
							<configuration>
								<tasks>
									<delete file="${demo.location}" verbose="true" />
								</tasks>
							</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>container-demoapp-deployable-location</id>
			<activation>
				<file>
					<exists>${demo.location}</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-richfaces-demo-war-from-location</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy file="${demo.location}" tofile="${project.build.directory}/richfaces-demo.war" overwrite="true" verbose="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
        <!-- Container: JBoss AS 7.1.X -->
        <!-- profile>
            <id>container-jboss-eap6</id>
            <activation>
                <property>
                    <name>containerId</name>
                    <value>jboss71x</value>
                </property>
            </activation>
            <properties>
                <container.home>${project.build.directory}/installs/jboss-eap-${container.version}/${container.unflatted.dir}</container.home>
                <container.configuration>standalone</container.configuration>
                <container.configuration.home>${container.home}/${container.configuration}</container.configuration.home>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.2.0</version>
                        <executions>
                            <execution>
                                <id>undeploy-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <configuration>
                                <home>${container.configuration.home}</home>
                                <type>existing</type>                                
                                <properties>
                                    <cargo.jboss.configuration>${container.configuration}</cargo.jboss.configuration>
                                    <cargo.rmi.port>1099</cargo.rmi.port>
                                </properties>                                
                            </configuration>                            
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile-->
        <!-- profile>
            <id>container-jboss-eap6-installation</id>
            <activation>
                <property>
                    <name>containerId</name>
                    <value>jboss71x</value>
                </property>
            </activation>
            <properties>
                <container.version>6.0.1</container.version>
                <container.unflatted.dir>jboss-eap-6.0</container.unflatted.dir>                
            </properties>
        </profile-->
        
		<!-- Container: JBoss AS 6.X -->
		<!-- profile>
			<id>container-jboss6x</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>jboss6x</value>
				</property>
			</activation>
			<properties>
				<container.home>${project.build.directory}/installs/jboss-eap-${container.version}/${container.unflatted.dir}</container.home>
				<container.configuration>default</container.configuration>
				<container.configuration.home>${container.home}/server/${container.configuration}</container.configuration.home>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId-->
						<!-- version>1.0.1-alpha-2</version-->
                        <!-- version>1.2.0</version>
						<executions>
							<execution>
								<id>undeploy-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<configuration>
								<home>${container.configuration.home}</home>
								<type>existing</type>
								<properties>
									<cargo.jboss.configuration>${container.configuration}</cargo.jboss.configuration>
									<cargo.rmi.port>1099</cargo.rmi.port>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>container-jboss6x-installation</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>jboss6x</value>
				</property>
			</activation>
			<properties>
				<container.version>6.0.0.Final</container.version>
				<container.unflatted.dir>jboss-6.0.0.Final</container.unflatted.dir>
				<container.installer.url>http://downloads.sourceforge.net/project/jboss/JBoss/JBoss-${container.version}/jboss-${container.version}.zip</container.installer.url>
			</properties>
		</profile-->
		<!-- Container: JBoss AS 5.X -->
		<!-- profile>
			<id>container-jboss5x</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>jboss5x</value>
				</property>
			</activation>
			<properties>
				<container.home>${project.build.directory}/installs/jboss-${container.version}/jboss-${container.version}</container.home>
				<container.configuration>default</container.configuration>
				<container.configuration.home>${container.home}/server/${container.configuration}</container.configuration.home>
				<jsf.libs.target>${container.configuration.home}/deploy/jbossweb.sar/jsf-libs</jsf.libs.target>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.0-beta-2</version>
						<executions>
							<execution>
								<id>undeploy-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<configuration>
								<home>${container.configuration.home}</home>
								<type>existing</type>
								<properties>
									<cargo.jboss.configuration>${container.configuration}</cargo.jboss.configuration>
									<cargo.rmi.port>1099</cargo.rmi.port>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>container-jboss5x-installation</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>jboss5x</value>
				</property>
			</activation>
			<properties>
				<container.version>5.1.0.GA</container.version>
				<container.installer.url>http://downloads.sourceforge.net/project/jboss/JBoss/JBoss-${container.version}/jboss-${container.version}.zip</container.installer.url>
			</properties>
		</profile-->
		<!--  Container: Tomcat 6.X -->
		<!-- profile>
			<id>container-tomcat6x</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>tomcat6x</value>
				</property>
			</activation>
			<properties>
				<container.home>${project.build.directory}/installs/apache-tomcat-${container.version}/apache-tomcat-${container.version}</container.home>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.0-beta-2</version>
						<configuration>
							<configuration>
								<home>${container.home}</home>
								<type>existing</type>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>container-tomcat6x-installation</id>
			<activation>
				<property>
					<name>containerId</name>
					<value>tomcat6x</value>
				</property>
			</activation>
			<properties>
				<container.version>6.0.20</container.version>
				<container.installer.url>http://www.apache.org/dist/tomcat/tomcat-6/v${container.version}/bin/apache-tomcat-${container.version}.zip</container.installer.url>
			</properties>
		</profile-->
		<!-- profile>
			<id>press-key-to-shutdown-server</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>press-key-to-shutdown-server</id>
								<phase>integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<input>Press key for shutdown server...</input>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile-->
		
		<profile>
            <id>jbossas-remote-7-1</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                    <version>${version.jbossas7-1}</version>
                </dependency>
                <dependency>
		            <groupId>org.jboss.arquillian.protocol</groupId>
		            <artifactId>arquillian-protocol-servlet</artifactId>
		            <scope>test</scope>
		        </dependency>
            </dependencies>
            <!-- build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <arquillian.launch>jbossas-remote-7-1</arquillian.launch>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build-->
        </profile>
        
        <profile>
            <id>jbosseap-managed-6-1</id>
            <properties>
                <metamer.classifier>jbas71</metamer.classifier>
                <showcase.classifier>jbas71</showcase.classifier>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-managed</artifactId>
                    <version>7.1.3.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <tasks>
                                        <unzip src="${eap61Zip}" dest="${project.build.directory}" />
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <arquillian.launch>jbosseap-managed-6-1</arquillian.launch>
                            </systemProperties>
                            <environmentVariables>
                                <JBOSS_HOME>${jbossEAP61Home}</JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
	</profiles>
	
	<dependencyManagement>
	   <dependencies>
	       <dependency>
	            <groupId>org.jboss.arquillian</groupId>
	            <artifactId>arquillian-bom</artifactId>
	            <version>${arquillian.bom.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	       </dependency>
	       <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>${arquillian.drone.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
	   </dependencies>
	</dependencyManagement>
	
	<dependencies>
	    <dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.1.1</version>
			<!-- version>5.9</version-->
			<scope>test</scope>
			<!-- classifier>jdk15</classifier-->
		</dependency>
		<!-- migrate to junit since it is easies way how to configure Drone (and docs describe case with junit) -->
		<!-- migration avoided due to impact to all test classes: required migration of all asserts and annotations -->
		<!-- dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency-->
		
		<!-- Selenium -->
        <!-- dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-support</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency-->

		<!--dependency>
			<groupId>org.seleniumhq.selenium.client-drivers</groupId>
			<artifactId>selenium-java-client-driver</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium.server</groupId>
			<artifactId>selenium-server-coreless</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>jetty</groupId>
					<artifactId>org.mortbay.jetty</artifactId>
				</exclusion>
			</exclusions>
		</dependency-->
		<!--dependency>
			<groupId>org.jboss.test</groupId>
			<artifactId>richfaces-selenium</artifactId>
			<version>1.0.0.GA</version>
			<scope>test</scope>
		</dependency-->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>

		<!-- Arquillian dependencies -->
		
		<!-- Se2 dependency according to docs -->
		<!-- dependency>
		    <groupId>org.jboss.arquillian.extension</groupId>
		    <artifactId>arquillian-drone-webdriver-depchain</artifactId>
		    <type>pom</type>
		    <scope>test</scope>
		</dependency-->		
		<dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>arquillian-graphene</artifactId>
            <version>${arquillian.graphene-testng.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
		
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- dependency>
		    <groupId>org.jboss.arquillian.junit</groupId>
		    <artifactId>arquillian-junit-container</artifactId>
		    <scope>test</scope>
		</dependency-->
        <!-- dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-impl</artifactId>
            <scope>test</scope>
        </dependency>
        -->
	</dependencies>
</project>
